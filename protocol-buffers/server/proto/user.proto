syntax = "proto3";

package proto;

import "google/protobuf/empty.proto";

option go_package = "server/gen/proto";

//unary
message User {
  reserved 10,20;
  string name = 1;
  string email = 2;
  string password = 3;
  repeated string roles = 4;
}

message SignupRequest {
  User user = 1;
}

message SignupResponse {
  string result = 1;
}
//end of unary proto

//proto for server streaming
message GetPostsRequest {
  fixed64 user_id = 1;
}
message GetPostsResponse {
  repeated Post posts = 1;
}

message Post {
  string title = 1;
  string author = 2;
  string body = 3;
}
//end server streaming


//client streaming
message CreatePostRequest {
  repeated Post posts = 1;
}

message CreatePostResponse {
  string result = 1;
}
//end client streaming

//bidirectional streaming
message GreetEveryoneRequest {
  string first_name = 1;
}

message GreetEveryoneResponse {
  string result = 1;
}
//end bidirectional streaming

//it is an interface between server and client
service UserService{
  //rpc Signup(SignupRequest) returns (google.protobuf.Empty);
  //unary
  rpc Signup(SignupRequest) returns (SignupResponse);

  //server streaming
  rpc GetPosts(GetPostsRequest) returns (stream GetPostsResponse);

  //client streaming
  rpc CreatePost(stream CreatePostRequest) returns (CreatePostResponse);


  //bidirectional streaming
  rpc GreetEveryone(stream GreetEveryoneRequest) returns (stream GreetEveryoneResponse);
}